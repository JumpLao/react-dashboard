import{object as e}from"yup";import{useDeepCompareEffect as t}from"react-use";import a,{FormContext as r,useFormContext as n}from"react-hook-form";import o from"lodash";import l,{useEffect as i,useState as c}from"react";import{Form as u,Button as m,Input as s}from"antd";var v=function(n){var o=n.children,i=n.onSubmit,c=n.defaultValues;void 0===c&&(c={});var m=n.validationSchema;void 0===m&&(m=e({}));var s=n.formItemLayout;void 0===s&&(s={labelCol:{xs:{span:24},sm:{span:24}},wrapperCol:{xs:{span:24},sm:{span:24}}}),t(function(){console.log("default value change");var e=v.getValues();return Object.keys(e).forEach(function(e){try{v.setValue(e,c[e])}catch(e){throw console.log(e),e}}),function(){}},[c]);var v=a({defaultValues:c,validationSchema:m});return l.createElement(r,v,l.createElement(u,Object.assign({},s,{onSubmit:v.handleSubmit(function(e,t){i(e)})}),o))},f=function(e){var t,a=e.name;void 0===a&&(a=void 0);var r=e.label;void 0===r&&(r=" ");var m=e.colon;void 0===m&&(m=!1);var s=e.defaultValueKey;void 0===s&&(s="defaultValue");var v=e.changeEvent;void 0===v&&(v="onChange");var f=e.eventValueGetter;void 0===f&&(f=function(e){return e.target.value});var p=e.children,d=e.formItemLayout;void 0===d&&(d={labelAlign:"right",labelCol:{xs:{span:24},sm:{span:6}},wrapperCol:{xs:{span:24},sm:{span:18}}});var b=e.onValueChange;void 0===b&&(b=function(e){});var g,h=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(a[r]=e[r]);return a}(e,["name","label","colon","defaultValueKey","changeEvent","eventValueGetter","children","formItemLayout","onValueChange"]),O=n(),y=O.register,j=O.unregister,E=O.setValue,V=O.errors,x=O.getValues,I=c(""),C=I[0],w=I[1];i(function(){return a?(console.log("register field",a),y({name:a}),function(){return j(a)}):function(){}},[y,a,j]),i(function(){var e=o.get(V,a);return e&&w(e.message),function(){w("")}},[V,a]),C&&(g="error");var S=o.get(x(),a),k=Object.assign({},h,((t={})[v]=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var r=f.apply(void 0,e);console.log("update field",a,r),E(a,r),b(r)},t[s]=S,t));return l.createElement(u.Item,Object.assign({},d,{colon:m,hasFeedback:!1,label:r,validateStatus:g,help:C,required:!1}),l.Children.map(p,function(e,t){return l.cloneElement(e,Object.assign({},{key:t},k))}))},p=function(e){var t=e.label,a=e.formItemOptions;void 0===a&&(a={});var r=e.children;void 0===r&&(r="Submit");var n=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(a[r]=e[r]);return a}(e,["label","formItemOptions","children"]);return l.createElement(f,Object.assign({},{label:t},a),l.createElement(m,Object.assign({},{type:"primary",htmlType:"submit"},n),r))},d=function(e){var t=e.name,a=e.label,r=e.formItemOptions;void 0===r&&(r={});var n=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(a[r]=e[r]);return a}(e,["name","label","formItemOptions"]);return l.createElement(f,Object.assign({},{name:t,label:a},r),l.createElement(s.TextArea,n))},b=function(e){var t=e.name,a=e.label,r=e.type;void 0===r&&(r="text");var n=e.formItemOptions;void 0===n&&(n={});var o=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(a[r]=e[r]);return a}(e,["name","label","type","formItemOptions"]);return l.createElement(f,Object.assign({},{name:t,label:a},n),l.createElement(s,Object.assign({},{type:r},o)))};export{v as Form,f as InputWrapper,p as SubmitButton,d as TextAreaInput,b as TextInput};
//# sourceMappingURL=index.mjs.map
