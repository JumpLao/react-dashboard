{"version":3,"file":"index.mjs","sources":["../src/components/Form.js","../src/components/InputWrapper.js","../src/components/SubmitButton.js","../src/components/TextAreaInput.js","../src/components/TextInput.js"],"sourcesContent":["import React from 'react'\nimport useForm, { FormContext } from 'react-hook-form'\nimport { Form as AntdForm } from 'antd'\nimport * as yup from 'yup'\nimport { useDeepCompareEffect } from 'react-use'\n\nconst Form = ({\n  children,\n  onSubmit,\n  defaultValues = {},\n  validationSchema = yup.object({})\n}) => {\n  useDeepCompareEffect(() => {\n    console.log('default value change')\n    const formValue = methods.getValues()\n    Object.keys(formValue).forEach(key => {\n      try {\n        methods.setValue(key, defaultValues[key])\n      } catch (e) {\n        console.log(e)\n        throw e\n      }\n    })\n    return () => {};\n  }, [defaultValues])\n  const methods = useForm({\n    defaultValues,\n    validationSchema\n  })\n  const handleSubmit = (data, e) => {\n    onSubmit(data)\n  }\n  return (\n    <FormContext {...methods}>\n      <AntdForm onSubmit={methods.handleSubmit(handleSubmit)}>\n        {children}\n      </AntdForm>\n    </FormContext>\n  )\n}\n\nexport default Form\n","import React, { useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { Form } from 'antd'\nimport _ from 'lodash'\n\nconst InputWrapper = ({\n  name = undefined,\n  label = undefined,\n  colon = false,\n  valueKey = 'value',\n  changeEvent = 'onChange',\n  eventValueGetter = (e) => e.target.value,\n  children,\n  formItemLayout = {\n    labelAlign: 'right',\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 6 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 18  },\n    },\n  },\n  onValueChange = (val) => {},\n  ...rest\n}) => {\n  const {\n    register,\n    unregister,\n    setValue,\n    errors,\n    getValues\n  } = useFormContext()\n  const [errorMessage, seterrorMessage] = useState('')\n  useEffect(() => {\n    if (!name) {\n      return () => {}\n    }\n    console.log('register field', name)\n    register({\n      name\n    })\n    return () => unregister(name)\n  }, [register, name, unregister])\n  useEffect(() => {\n    const error = _.get(errors, name)\n    if (error) {\n      seterrorMessage(error.message)\n    }\n    return () => {\n      seterrorMessage('')\n    };\n  }, [errors, name])\n  const handleChange = (...params) => {\n    const value = eventValueGetter(...params)\n    console.log('update field', name, value)\n    setValue(name, value)\n    onValueChange(value)\n  }\n\n  const hasFeedback = false\n  let status\n  const required = false\n  \n  if (errorMessage) {\n    status = 'error'\n  }\n  const value = _.get(getValues(), name);\n  const inputProps = {\n    ...rest,\n    [changeEvent]: handleChange,\n    [valueKey]: value\n  }\n  return (\n    // @ts-ignore\n    <Form.Item {...formItemLayout} colon={colon} hasFeedback={hasFeedback} label={label} validateStatus={status} help={errorMessage} required={required}>\n      {React.Children.map(children, (child, index) => React.cloneElement(child, {key: index, ...inputProps}))}\n    </Form.Item>\n  )\n}\n\nexport default InputWrapper\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Button } from 'antd'\n\nconst SubmitButton = ({\n  label = 'Submit',\n  formItemOptions = {},\n  ...rest\n}) => {\n  return (\n    <InputWrapper {...formItemOptions}>\n      <Button htmlType='submit' {...rest}>\n        {label}\n      </Button>\n    </InputWrapper>\n  )\n}\n\nexport default SubmitButton\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Input } from 'antd'\n\nconst TextAreaInput = ({\n  name,\n  label,\n  formItemOptions = {},\n  ...rest\n}) => {\n  return (\n    <InputWrapper name={name} label={label} {...formItemOptions}>\n      <Input.TextArea {...rest}/>\n    </InputWrapper>\n  )\n}\n\nexport default TextAreaInput\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Input } from 'antd'\n\nconst TextInput = ({\n  name,\n  label,\n  type = 'text',\n  formItemOptions = {},\n  ...rest\n}) => {\n  return (\n    <InputWrapper name={name} label={label} {...formItemOptions}>\n      <Input type={type} {...rest}/>\n    </InputWrapper>\n  )\n}\n\nexport default TextInput\n"],"names":["const","Form","ref","yup","useDeepCompareEffect","console","log","formValue","methods","getValues","Object","keys","forEach","key","setValue","defaultValues","e","useForm","validationSchema","React","FormContext","AntdForm","onSubmit","handleSubmit","data","children","InputWrapper","undefined","target","value","labelAlign","labelCol","xs","span","sm","wrapperCol","val","status","useFormContext","useState","useEffect","name","register","unregister","error","_","get","errors","seterrorMessage","message","errorMessage","inputProps","rest","changeEvent","eventValueGetter","params","onValueChange","valueKey","Item","formItemLayout","colon","hasFeedback","label","validateStatus","help","required","Children","map","child","index","cloneElement","SubmitButton","formItemOptions","Button","htmlType","TextAreaInput","Input","TextArea","TextInput","type"],"mappings":"+QAMAA,IAAMC,WAAQC,kEAGI,4CACGC,EAAW,KAE9BC,aACEC,QAAQC,IAAI,4BACNC,EAAYC,EAAQC,mBAC1BC,OAAOC,KAAKJ,GAAWK,iBAAQC,OAE3BL,EAAQM,SAASD,EAAKE,EAAcF,IACpC,MAAOG,SACPX,QAAQC,IAAIU,GACNA,mBAIT,CAACD,QACEP,EAAUS,EAAQ,eACtBF,mBACAG,WAMAC,gBAACC,EAAgBZ,EACfW,gBAACE,GAASC,SAAUd,EAAQe,sBALVC,EAAMR,GAC1BM,EAASE,MAKJC,KC9BHC,WAAgBxB,sCACbyB,qCACCA,iCACA,mCACG,4CACG,6DACMX,UAAMA,EAAEY,OAAOC,2DAElB,CACfC,WAAY,QACZC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,qDAGCG,UAsCbC,oPA7BAC,wEACoCC,EAAS,kBACjDC,oBACOC,GAGLpC,QAAQC,IAAI,iBAAkBmC,GAC9BC,EAAS,MACPD,sBAEWE,EAAWF,mBACvB,CAACC,EAAUD,EAAME,IACpBH,iBACQI,EAAQC,EAAEC,IAAIC,EAAQN,UACxBG,GACFI,EAAgBJ,EAAMK,oBAGtBD,EAAgB,MAEjB,CAACD,EAAQN,IAYRS,IACFb,EAAS,aAELR,EAAQgB,EAAEC,IAAIrC,IAAagC,GAC3BU,EAAazC,iBACd0C,UACFC,yEAhBKxB,EAAQyB,aAAiB,EAAGC,GAClClD,QAAQC,IAAI,eAAgBmC,EAAMZ,GAClCf,EAAS2B,EAAMZ,GACf2B,EAAc3B,MAcb4B,GAAW5B,6BAIX5B,EAAKyD,sBAAKC,GAAoBC,MAAOA,EAAOC,aAf3B,EAeqDC,MAAOA,EAAOC,eAAgB1B,EAAQ2B,KAAMd,EAAce,UAblH,IAcb9C,EAAO+C,SAASC,IAAI1C,WAAW2C,EAAOC,UAAUlD,EAAMmD,aAAaF,EAAO1D,kBAACG,IAAKwD,GAAUlB,QCzE1FoB,WAAgBrE,gCACZ,iDACU,0KAIhBiB,gBAACO,EAAiB8C,EAChBrD,gBAACsD,oBAAOC,SAAS,aACdZ,KCRHa,WAAiBzE,6DAGH,iLAIhBiB,gBAACO,oBAAae,KAAMA,EAAMqB,MAAOA,GAAWU,GAC1CrD,gBAACyD,EAAMC,SAASzB,KCRhB0B,WAAa5E,kDAGV,+CACW,wLAIhBiB,gBAACO,oBAAae,KAAMA,EAAMqB,MAAOA,GAAWU,GAC1CrD,gBAACyD,oBAAMG,KAAMA,GAAU3B"}