{"version":3,"file":"index.js","sources":["../src/components/InputWrapper.js","../src/components/Form.js","../src/components/SubmitButton.js","../src/components/TextAreaInput.js","../src/components/TextInput.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { Form } from 'antd'\nimport _ from 'lodash'\n\nconst InputWrapper = ({\n  name = undefined,\n  label = ' ',\n  colon = false,\n  defaultValueKey = 'defaultValue',\n  changeEvent = 'onChange',\n  eventValueGetter = (e) => e.target.value,\n  children,\n  formItemLayout = {\n    labelAlign: 'right',\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 6 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 18  },\n    },\n  },\n  onValueChange = (val) => {},\n  ...rest\n}) => {\n  const {\n    register,\n    unregister,\n    setValue,\n    errors,\n    getValues\n  } = useFormContext()\n  const [errorMessage, seterrorMessage] = useState('')\n  useEffect(() => {\n    if (!name) {\n      return () => {}\n    }\n    console.log('register field', name)\n    register({\n      name\n    })\n    return () => unregister(name)\n  }, [register, name, unregister])\n  useEffect(() => {\n    const error = _.get(errors, name)\n    if (error) {\n      seterrorMessage(error.message)\n    }\n    return () => {\n      seterrorMessage('')\n    };\n  }, [errors, name])\n  const handleChange = (...params) => {\n    const value = eventValueGetter(...params)\n    console.log('update field', name, value)\n    setValue(name, value)\n    onValueChange(value)\n  }\n\n  const hasFeedback = false\n  let status\n  const required = false\n  \n  if (errorMessage) {\n    status = 'error'\n  }\n  const value = _.get(getValues(), name);\n  const inputProps = {\n    ...rest,\n    [changeEvent]: handleChange,\n    [defaultValueKey]: value\n  }\n  return (\n    // @ts-ignore\n    <Form.Item {...formItemLayout} colon={colon} hasFeedback={hasFeedback} label={label} validateStatus={status} help={errorMessage} required={required}>\n      {React.Children.map(children, (child, index) => React.cloneElement(child, {key: index, ...inputProps}))}\n    </Form.Item>\n  )\n}\n\nexport default InputWrapper\n","import React from 'react'\nimport useForm, { FormContext } from 'react-hook-form'\nimport { Form as AntdForm } from 'antd'\nimport * as yup from 'yup'\nimport { useDeepCompareEffect } from 'react-use'\n\nconst Form = ({\n  children,\n  onSubmit,\n  defaultValues = {},\n  validationSchema = yup.object({}),\n  formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 24 },\n    },\n  },\n}) => {\n  useDeepCompareEffect(() => {\n    console.log('default value change')\n    const formValue = methods.getValues()\n    Object.keys(formValue).forEach(key => {\n      try {\n        methods.setValue(key, defaultValues[key])\n      } catch (e) {\n        console.log(e)\n        throw e\n      }\n    })\n    return () => {};\n  }, [defaultValues])\n  const methods = useForm({\n    defaultValues,\n    validationSchema\n  })\n  const handleSubmit = (data, e) => {\n    onSubmit(data)\n  }\n  return (\n    <FormContext {...methods}>\n      <AntdForm {...formItemLayout} onSubmit={methods.handleSubmit(handleSubmit)}>\n        {children}\n      </AntdForm>\n    </FormContext>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Button } from 'antd'\n\nconst SubmitButton = ({\n  label,\n  formItemOptions = {},\n  children = 'Submit',\n  ...rest\n}) => {\n  return (\n    <InputWrapper label={label} {...formItemOptions}>\n      <Button type=\"primary\" htmlType='submit' {...rest}>\n        {children}\n      </Button>\n    </InputWrapper>\n  )\n}\n\nexport default SubmitButton\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Input } from 'antd'\n\nconst TextAreaInput = ({\n  name,\n  label,\n  formItemOptions = {},\n  ...rest\n}) => {\n  return (\n    <InputWrapper name={name} label={label} {...formItemOptions}>\n      <Input.TextArea {...rest}/>\n    </InputWrapper>\n  )\n}\n\nexport default TextAreaInput\n","import React from 'react'\nimport InputWrapper from './InputWrapper'\nimport { Input } from 'antd'\n\nconst TextInput = ({\n  name,\n  label,\n  type = 'text',\n  formItemOptions = {},\n  ...rest\n}) => {\n  return (\n    <InputWrapper name={name} label={label} {...formItemOptions}>\n      <Input type={type} {...rest}/>\n    </InputWrapper>\n  )\n}\n\nexport default TextInput\n"],"names":["InputWrapper","ref","undefined","e","target","value","labelAlign","labelCol","xs","span","sm","wrapperCol","val","status","useFormContext","useState","useEffect","name","console","log","register","unregister","error","_","get","errors","seterrorMessage","message","errorMessage","getValues","inputProps","Object","rest","changeEvent","eventValueGetter","params","setValue","onValueChange","defaultValueKey","Form","Item","formItemLayout","colon","hasFeedback","label","validateStatus","help","required","React","Children","map","children","child","index","cloneElement","key","yup","useDeepCompareEffect","formValue","methods","keys","forEach","defaultValues","useForm","validationSchema","FormContext","AntdForm","onSubmit","handleSubmit","data","formItemOptions","Button","type","htmlType","Input","TextArea"],"mappings":"yNAKMA,WAAgBC,sCACbC,gCACC,mCACA,0CACU,mDACJ,6DACMC,UAAMA,EAAEC,OAAOC,2DAElB,CACfC,WAAY,QACZC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,qDAGCG,UAsCbC,2PA7BAC,uFACoCC,WAAS,kBACjDC,8BACOC,GAGLC,QAAQC,IAAI,iBAAkBF,GAC9BG,EAAS,MACPH,sBAEWI,EAAWJ,mBACvB,CAACG,EAAUH,EAAMI,IACpBL,2BACQM,EAAQC,EAAEC,IAAIC,EAAQR,UACxBK,GACFI,EAAgBJ,EAAMK,oBAGtBD,EAAgB,MAEjB,CAACD,EAAQR,IAYRW,IACFf,EAAS,aAELR,EAAQkB,EAAEC,IAAIK,IAAaZ,GAC3Ba,EAAaC,iBACdC,UACFC,yEAhBK5B,EAAQ6B,aAAiB,EAAGC,GAClCjB,QAAQC,IAAI,eAAgBF,EAAMZ,GAClC+B,EAASnB,EAAMZ,GACfgC,EAAchC,MAcbiC,GAAkBjC,6BAIlBkC,OAAKC,sBAAKC,GAAoBC,MAAOA,EAAOC,aAf3B,EAeqDC,MAAOA,EAAOC,eAAgBhC,EAAQiC,KAAMlB,EAAcmB,UAblH,IAcbC,EAAOC,SAASC,IAAIC,WAAWC,EAAOC,UAAUL,EAAMM,aAAaF,EAAOrB,kBAACwB,IAAKF,GAAUvB,8BCvElF7B,kEAGI,4CACGuD,SAAW,2CACb,CACfjD,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,KAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,OAIhBgD,kCACEvC,QAAQC,IAAI,4BACNuC,EAAYC,EAAQ9B,mBAC1BE,OAAO6B,KAAKF,GAAWG,iBAAQN,OAE3BI,EAAQvB,SAASmB,EAAKO,EAAcP,IACpC,MAAOpD,SACPe,QAAQC,IAAIhB,GACNA,mBAIT,CAAC2D,QACEH,EAAUI,EAAQ,eACtBD,mBACAE,WAMAhB,gBAACiB,cAAgBN,EACfX,gBAACkB,wBAASzB,GAAoB0B,SAAUR,EAAQS,sBAL9BC,EAAMlE,GAC1BgE,EAASE,OAKJlB,0DCzCalD,oDAEF,oCACP,2LAIT+C,gBAAChD,oBAAa4C,MAAOA,GAAW0B,GAC9BtB,gBAACuB,2BAAOC,KAAK,UAAUC,SAAS,UAAazC,GAC1CmB,oCCTclD,6DAGH,iLAIhB+C,gBAAChD,oBAAaiB,KAAMA,EAAM2B,MAAOA,GAAW0B,GAC1CtB,gBAAC0B,QAAMC,SAAS3C,gCCRH/B,kDAGV,+CACW,wLAIhB+C,gBAAChD,oBAAaiB,KAAMA,EAAM2B,MAAOA,GAAW0B,GAC1CtB,gBAAC0B,0BAAMF,KAAMA,GAAUxC"}